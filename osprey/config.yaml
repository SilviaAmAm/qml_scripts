# osprey configuration file.
#---------------------------
# usage:
#  osprey worker config.yaml

estimator:
    # The model/estimator to be fit.

    # pick one of these ways to specify
      # path to a file
    pickle: model.pickle

strategy:
    # the search section specifies the space of hyperparameters to search over
    # and the strategy for doing so

    # hyperopt's tree of parzen estimators http://hyperopt.github.io/hyperopt/
    # and random search are curently supported.
    name: random  # or gp, hyperopt_tpe
    # params: {}

search_space:
  # the search space is specified by listing the variables you want to
  # optimize over and their bounds for float and int typed variables,
  # or the possible choices for enumeration-typed variables.

  l1_reg:
    min: 1e-10
    max: 1e-1
    type: float       # from 10 to 100 (with inclusive endpoints)
    warp: log

  l2_reg:
    min: 1e-10
    max: 1e-1
    type: float
    warp: log

  learning_rate:
    min: 1e-4
    max: 1e-1
    type: float
    warp: log

cv:
  name: kfold
  params:
    n_splits: 2
    shuffle: True

dataset_loader:
  name: dsv
  params:
    filenames: idx.csv

trials:
  # path to a databse in which the results of each hyperparameter fit
  # are stored any SQL database is suppoted, but we recommend using
  # SQLLite, which is simple and stores the results in a file on disk.
  # the string format for connecting to other database is described here:
  # http://docs.sqlalchemy.org/en/rel_0_9/core/engines.html#database-urls
  uri: sqlite:///osprey-trials.db
  # if you want to save n > 1 projects in the same DB file, you can set
  # `project_name` to distringuish them:
  # project_name: name
